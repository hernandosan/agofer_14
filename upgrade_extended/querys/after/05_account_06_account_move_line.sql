insert into account_move_line (
	id, 
	create_date, 
	statement_id, 
	journal_id, 
	currency_id, 
	date_maturity, 
	partner_id, 
	blocked, 
	analytic_account_id, 
	create_uid, 
	credit, 
	company_id, 
	debit, 
	ref, 
	account_id, 
	write_date, 
	date, 
	write_uid, 
	move_id, 
	name, 
	product_id, 
	product_uom_id, 
	amount_currency, 
	quantity, 
	statement_line_id
)select 
	agofer.id, 
	agofer.create_date, 
	agofer.statement_id, 
	agofer.journal_id, 
	--agofer.currency_id,
	45,
	agofer.date_maturity, 
	agofer.partner_id, 
	agofer.blocked, 
	agofer.analytic_account_id, 
	agofer.create_uid, 
	agofer.credit, 
	agofer.company_id, 
	agofer.debit, 
	agofer.ref, 
	agofer.account_id, 
	agofer.write_date, 
	agofer.date, 
	agofer.write_uid, 
	agofer.move_id, 
	agofer.name, 
	agofer.product_id, 
	agofer.product_uom_id, 
	agofer.amount_currency, 
	agofer.quantity, 
	agofer.statement_line_id
from dblink('dbname=agofer_08','SELECT 
	id, 
	create_date, 
	statement_id, 
	journal_id, 
	currency_id, 
	date_maturity, 
	partner_id, 
	blocked, 
	analytic_account_id, 
	create_uid, 
	credit, 
	company_id, 
	debit, 
	ref, 
	account_id, 
	write_date, 
	date, 
	write_uid, 
	move_id, 
	name, 
	product_id, 
	product_uom_id, 
	amount_currency, 
	quantity, 
	statement_line_id
	FROM account_move_line;'
) as agofer(
	id integer, 
	create_date timestamp without time zone, 
	statement_id integer, 
	journal_id integer, 
	currency_id integer, 
	date_maturity date, 
	partner_id integer, 
	blocked boolean, 
	analytic_account_id integer, 
	create_uid integer, 
	credit numeric, 
	company_id integer, 
	debit numeric, 
	ref character varying, 
	account_id integer, 
	write_date timestamp without time zone, 
	date date, 
	write_uid integer, 
	move_id integer, 
	name character varying, 
	product_id integer, 
	product_uom_id integer, 
	amount_currency numeric, 
	quantity numeric, 
	statement_line_id integer
) INNER JOIN account_move am ON am.id = agofer.move_id
INNER JOIN account_bank_statement_line ABSL ON ABSL.id = agofer.statement_line_id;