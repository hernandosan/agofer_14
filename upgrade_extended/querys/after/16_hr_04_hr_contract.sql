INSERT INTO hr_contract (
	    afp_pension_id,
        afp_severance_id,
        apply_procedure_2,
        apprentice_to_worker_date,
        arl_id,
        bonus,
        ccf_id,
        company_id,
        contract_city_id,
        contract_days,
        contract_group_id,
        contract_type_id,
        create_date,
        create_uid,
        date_end,
        date_start,
        deduction_by_estate,
        deduction_by_healthcare,
        deduction_dependents,
        employee_id,
        eps_id,
        fiscal_subtype_id,
        fiscal_type_id,
        high_risk,
        id,
        job_id,
        journal_id,
        limit_deductions,
        minimum_wage,
        name,
        notes,
        remote_work_allowance,
        resource_calendar_id,
        risk_id,
        schedule_pay,
        settlement_date,
        settlement_period_id,
        settlement_type,
        skip_commute_allowance,
        term,
        trial_date_end,
        trial_date_start,
        wage,
        withholding_percent,
        work_city_id,
        write_date,
        write_uid,
        state,
        active
) SELECT
	agofer.afp_pension_id,
    agofer.afp_severance_id,
    agofer.apply_procedure_2,
    agofer.apprentice_to_worker_date,
    agofer.arl_id,
    agofer.bonus,
    agofer.ccf_id,
    agofer.company_id,
    agofer.contract_city_id,
    agofer.contract_days,
    agofer.contract_group_id,
    agofer.contract_type_id,
    agofer.create_date,
    --agofer.create_uid,
	(CASE WHEN agofer.create_uid = 2 THEN 1 ELSE agofer.create_uid END),
    agofer.date_end,
    agofer.date_start,
    agofer.deduction_by_estate,
    agofer.deduction_by_healthcare,
    agofer.deduction_dependents,
    agofer.employee_id,
    agofer.eps_id,
    agofer.fiscal_subtype_id,
    agofer.fiscal_type_id,
    agofer.high_risk,
    agofer.id,
    agofer.job_id,
    agofer.journal_id,
    agofer.limit_deductions,
    agofer.minimum_wage,
    agofer.name,
    agofer.notes,
    agofer.remote_work_allowance,
    agofer.resource_calendar_id,
    agofer.risk,
    agofer.schedule_pay,
    agofer.settlement_date,
    agofer.settlement_period_id,
    agofer.settlement_type,
    agofer.skip_commute_allowance,
    agofer.term,
    agofer.trial_date_end,
    agofer.trial_date_start,
    agofer.wage,
    agofer.withholding_percent,
    agofer.work_city_id,
    agofer.write_date,
    --agofer.write_uid,
	(CASE WHEN agofer.write_uid = 2 THEN 1 ELSE agofer.write_uid END),
    agofer.state,
    --agofer.active,
    TRUE
from dblink('dbname=agofer_08','select
	pensiones,
    cesantias,
    p2,
    apr_prod_date,
    arl,
    bono,
    cajacomp,
    company_id,
    cuidad_contract,
    contract_days,
    group_id,
    type_id,
    create_date,
    coalesce(2, create_uid),
    fix_end,
    date_start,
    ded_living,
    ded_prepaid,
    ded_dependents,
    employee_id,
    eps,
    fiscal_subtype_id,
    fiscal_type_id,
    high_risk,
    id,
    job_id,
    null,
    ded_limit,
    smmlv,
    name,
    notes,
    aux_connectivity,
    coalesce(1, working_hours),
    riesgo,
    (case when schedule_pay = ''monthly'' then ''MONTHLY'' when schedule_pay = ''bi-monthly'' then ''BIWEEKLY''else '''' end),
    date_end,
    payslip_period_id,
     (case
            when separation_type = ''retvoltra'' then ''vol''
            when separation_type = ''terlabcon'' then ''lab''
            when separation_type = ''canjuscau'' then ''causa''
            when separation_type = ''terconpba'' then ''prueba''
            when separation_type = ''retnotjuscau'' then ''n_causa''
            when separation_type = ''expplafij'' then ''exp''
            when separation_type = ''decunicom'' then ''unil''
            when separation_type = ''fal'' then ''fal''
            when separation_type = ''pen'' then ''pen''
            when separation_type = ''nolab'' then ''nolab''
            when separation_type = ''termutacu'' then ''mutuo''
            else ''''
        end
    ),
    skip_aux_trans,
    (case when term = ''obralabor'' then ''obra-labor'' else term end),
    trial_date_end,
    trial_date_start,
    wage,
    rtf_rate,
    cuidad_desempeno,
    write_date,
    coalesce(2, write_uid),
    (case when state = ''in_progress'' then ''open'' else ''close'' end)
	FROM hr_contract;'
) as agofer(
	    afp_pension_id integer,
        afp_severance_id integer,
        apply_procedure_2 boolean,
        apprentice_to_worker_date date,
        arl_id integer,
        bonus numeric,
        ccf_id integer,
        company_id integer,
        contract_city_id integer,
        contract_days integer,
        contract_group_id integer,
        contract_type_id integer,
        create_date timestamp without time zone,
        create_uid integer,
        date_end date,
        date_start date,
        deduction_by_estate numeric,
        deduction_by_healthcare numeric,
        deduction_dependents boolean,
        employee_id integer,
        eps_id integer,
        fiscal_subtype_id integer,
        fiscal_type_id integer,
        high_risk boolean,
        id integer,
        job_id integer,
        journal_id integer,
        limit_deductions boolean,
        minimum_wage boolean,
        name character varying,
        notes text,
        remote_work_allowance boolean,
        resource_calendar_id integer,
        risk integer,
        schedule_pay character varying,
        settlement_date date,
        settlement_period_id integer,
        settlement_type character varying,
        skip_commute_allowance boolean,
        term character varying,
        trial_date_end date,
        trial_date_start date,
        wage numeric,
        withholding_percent double precision,
        work_city_id integer,
        write_date timestamp without time zone,
        write_uid integer,
        state character varying
);

select setval('hr_contract_id_seq', (select max(id) from hr_contract));